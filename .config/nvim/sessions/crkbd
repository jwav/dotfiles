let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/keymaps/crkbd_jwav
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
$argadd my_combos.h
edit my_combos.h
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 163 + 106) / 213)
exe 'vert 2resize ' . ((&columns * 49 + 106) / 213)
argglobal
balt term://~/keymaps/crkbd_jwav//5029:/usr/bin/zsh
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=1
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 51 - ((24 * winheight(0) + 25) / 51)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 51
normal! 091|
lcd ~/keymaps/crkbd_jwav
wincmd w
argglobal
enew
file ~/keymaps/crkbd_jwav/__Tagbar__.1
balt term://~/keymaps/crkbd_jwav//5029:/usr/bin/zsh
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=1
setlocal nofen
lcd ~/keymaps/crkbd_jwav
wincmd w
exe 'vert 1resize ' . ((&columns * 163 + 106) / 213)
exe 'vert 2resize ' . ((&columns * 49 + 106) / 213)
tabnext 1
badd +51 ~/keymaps/crkbd_jwav/my_combos.h
badd +43 term://~/keymaps/crkbd_jwav//5029:/usr/bin/zsh
badd +287 ~/keymaps/crkbd_jwav/my_french_keycode_aliases.h
badd +43 term://~/keymaps/crkbd_jwav//5335:/usr/bin/zsh
badd +1 ~/keymaps/crkbd_jwav/my_custom_keycodes.h
badd +1 ~/keymaps/crkbd_jwav/config.h
badd +41 ~/dotfiles/.config/nvim/plugins.vim
badd +1 ~/dotfiles/.config/nvim/init.vim
badd +1 term://~/keymaps/crkbd_jwav//13117:/usr/bin/zsh
badd +1 ~/keymaps/crkbd_jwav/my_keypos_aliases.h
badd +1 ~/keymaps/crkbd_jwav/my_homerow_mods.h
badd +2 ~/keymaps/crkbd_jwav/keymap.c
badd +1 ~/keymaps/crkbd_jwav/êêê^
badd +1 ~/keymaps/crkbd_jwav/flash.sh
badd +9 ~/dotfiles/.config/nvim/plug-config/easymotion.vim
badd +38 ~/keymaps/crkbd_jwav/crkbd_jwav.json
badd +177 ~/dotfiles/.config/nvim/mappings.vim
badd +3 ~/keymaps/crkbd_jwav/my_combos_definitions.h
badd +1 ~/keymaps/crkbd_jwav/my_keymap.h
badd +1 ~/keymaps/crkbd_jwav/foo
badd +26 term://~/keymaps/crkbd_jwav//12844:/usr/bin/zsh
badd +1 ~/keymaps/crkbd_jwav/__Tagbar__.3
badd +1 ~/keymaps/crkbd_jwav/combos.py
badd +989 term://~/keymaps/crkbd_jwav//12695:/usr/bin/zsh
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFI
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
