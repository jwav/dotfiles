let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/keymaps/crkbd_jwav
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
$argadd ~/qmk_firmware_0.2.2/keyboards/crkbd/keymaps/jwav/my_combos.h
edit my_custom_keycodes.h
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 25 + 28) / 57)
exe 'vert 1resize ' . ((&columns * 107 + 106) / 213)
exe '2resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 2resize ' . ((&columns * 107 + 106) / 213)
exe '3resize ' . ((&lines * 25 + 28) / 57)
exe 'vert 3resize ' . ((&columns * 105 + 106) / 213)
exe '4resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 4resize ' . ((&columns * 105 + 106) / 213)
argglobal
balt term://~/keymaps/crkbd_jwav//10340:/usr/bin/zsh
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=1
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 4 - ((3 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 4
normal! 0
lcd ~/keymaps/crkbd_jwav
wincmd w
argglobal
if bufexists("~/keymaps/crkbd_jwav/my_custom_keycodes.h") | buffer ~/keymaps/crkbd_jwav/my_custom_keycodes.h | else | edit ~/keymaps/crkbd_jwav/my_custom_keycodes.h | endif
if &buftype ==# 'terminal'
  silent file ~/keymaps/crkbd_jwav/my_custom_keycodes.h
endif
balt ~/keymaps/crkbd_jwav/my_french_keycode_aliases.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=1
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 107 - ((1 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 107
normal! 0
lcd ~/keymaps/crkbd_jwav
wincmd w
argglobal
if bufexists("~/keymaps/crkbd_jwav/my_combos.h") | buffer ~/keymaps/crkbd_jwav/my_combos.h | else | edit ~/keymaps/crkbd_jwav/my_combos.h | endif
if &buftype ==# 'terminal'
  silent file ~/keymaps/crkbd_jwav/my_combos.h
endif
balt ~/keymaps/crkbd_jwav/config.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=1
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 90 - ((1 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 90
normal! 01|
lcd ~/keymaps/crkbd_jwav
wincmd w
argglobal
if bufexists("~/keymaps/crkbd_jwav/keypos.py") | buffer ~/keymaps/crkbd_jwav/keypos.py | else | edit ~/keymaps/crkbd_jwav/keypos.py | endif
if &buftype ==# 'terminal'
  silent file ~/keymaps/crkbd_jwav/keypos.py
endif
balt ~/keymaps/crkbd_jwav/generated_keymap.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=1
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 018|
lcd ~/keymaps/crkbd_jwav
wincmd w
exe '1resize ' . ((&lines * 25 + 28) / 57)
exe 'vert 1resize ' . ((&columns * 107 + 106) / 213)
exe '2resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 2resize ' . ((&columns * 107 + 106) / 213)
exe '3resize ' . ((&lines * 25 + 28) / 57)
exe 'vert 3resize ' . ((&columns * 105 + 106) / 213)
exe '4resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 4resize ' . ((&columns * 105 + 106) / 213)
tabnext 1
badd +17 ~/dotfiles/.config/nvim/init.vim
badd +1 ~/qmk_firmware_0.2.2/keyboards/crkbd/keymaps/jwav/my_combos.h
badd +84 ~/keymaps/crkbd_jwav/my_combos.h
badd +60 ~/keymaps/crkbd_jwav/config.h
badd +40 ~/keymaps/crkbd_jwav/my_combos_definitions.h
badd +44 ~/dotfiles/.config/nvim/plugins.vim
badd +36 ~/dotfiles/.config/nvim/mappings.vim
badd +5 ~/dotfiles/.config/nvim/commands.vim
badd +93 ~/qmk_firmware_0.2.2/keyboards/crkbd/keymaps/jwav/combos.py
badd +25 term://.//11470:/usr/bin/zsh
badd +1 term://.//12534:/usr/bin/zsh
badd +22 term://.//12552:/usr/bin/zsh
badd +270 ~/dotfiles/.config/nvim/settings.vim
badd +1 ~/keymaps/crkbd_jwav/flash.sh
badd +1 ~/keymaps/crkbd_jwav/flash_promicro.sh
badd +3 ~/keymaps/crkbd_jwav/promicro_flash.sh
badd +4 ~/keymaps/crkbd_jwav/compile_from_json.sh
badd +21 ~/keymaps/crkbd_jwav/rules.mk
badd +1 ~/keymaps/crkbd_jwav/flashreport.txt
badd +10004 term://~/keymaps/crkbd_jwav//5804:/usr/bin/zsh
badd +52 term://~/keymaps/crkbd_jwav//20878:/usr/bin/zsh
badd +55 ~/keymaps/crkbd_jwav/keypos.py
badd +4 ~/keymaps/crkbd_jwav/keymap.c
badd +4 ~/keymaps/crkbd_jwav/my_custom_keycodes.h
badd +10 ~/keymaps/crkbd_jwav/generated_keymap.h
badd +1 ~/keymaps/crkbd_jwav/my_french_keycode_aliases.h
badd +17 term://~/keymaps/crkbd_jwav//718:/usr/bin/zsh
badd +1 ~/keymaps/crkbd_jwav/my_keypos_aliases.h
badd +1629 term://~/keymaps/crkbd_jwav//1082:/usr/bin/zsh
badd +187 ~/keymaps/crkbd_jwav/crkbd_jwav.json
badd +109 term://~/keymaps/crkbd_jwav//9615:/usr/bin/zsh
badd +25 term://~/keymaps/crkbd_jwav//10340:/usr/bin/zsh
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFI
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
